project.version = '1.0.0'

apply plugin: 'java'

def gradleProjects() { 
    return subprojects.findAll { new File(it.projectDir, 'build.gradle').exists() }
} 

configure(gradleProjects()) { 
    project.version = rootProject.version 
    apply plugin: 'application'
    repositories {
        mavenCentral()
        maven {
            url 'http://repo.incapturesolutions.com/public/repository'
        }
    }
    dependencies {
        compile "com.rapture:RaptureCore:2.0.+"
    }
    startScripts {
        // add etc folder to the classpath to pick up cfg files
        if (System.getProperty("os.name").toLowerCase().contains("windows")) {
            classpath = project.files(['%APP_HOME%\\etc'])
        } else {
            classpath = project.files(['$APP_HOME/lib/*', '$APP_HOME/etc'])
        }
        doLast {
            // gradle always puts extra classpaths relative to the lib folder, so we have to replace
            windowsScript.text = windowsScript.text.replace('%APP_HOME%\\lib\\etc', '%APP_HOME%\\lib\\*;%APP_HOME%\\etc')
            unixScript.text = unixScript.text.replace('$APP_HOME/lib/etc', '$APP_HOME/etc')
        }
    }
}

task zipAll(type: Zip) {
    dependsOn gradleProjects().installDist
    from '.'
    into project.name
    exclude '**/*.zip'
    exclude '**/.gradle'
    exclude '**/.classpath'
    exclude '**/.project'
    exclude '**/.settings'
}
